<?xml version="1.0" encoding="UTF-8"?>

<root id="Cube" xmlns="http://www.xml3d.org/2009/xml3d/">
    <!-- kind of based on xml3d, but mostly just using XML bc:
     - it has tree-like nature
     - and CSS selectability -->
    
    <!-- 
     TODO: setup view to control worldUniforms for scene
     -->
    <view position="0 0 1"></view>
    

<!-- 
 TODO: reusable transforms
 -->

<!--    <transform id="xfm" rotation="0 0 1 0.5" scale="1 2 3"-->
<!--    translation="4 5 6" center="0 0 5" scaleOrientation="0 0 1 0.785398163" />-->
<!--    -->
<!--    <group transform="#xfm" >-->
<!--        -->
<!--    </group>-->

    <mesh id="spectra_cube" type="triangles" spectra-node-gen="cube">
        
    </mesh>
    
    <mesh id="spectra_cube2" type="triangles" spectra-node-ref="spectra_cube">
        
    </mesh>
    
<!--    <mesh id="cube_xml3d" type="triangles">-->
<!--        <int name="index"></int>-->
<!--        <float3 name="position"></float3>-->
<!--        <float3 name="texcoords"></float3>-->
<!--    </mesh>-->

    <!-- 
     TODO: parse defs to provide primitive data other nodes can use
     TODO: setup defs to either declare data -or- pass arguments to a node/compute generator
     -->
    <defs>
        <!-- reusable data definitions go here ...
         ... but needs to be implemented in XML parser =/ -->
        <data id="cube_data">
            <int name="index">
                <!-- going to do this later, not even sure if i want to use strict x3d -->
            </int>
            <float4 name="position">
                -1  1  1 1
                -1 -1  1 1
                 1 -1  1 1
                 1  1  1 1
                -1  1 -1 1
                 1  1 -1 1
                -1 -1 -1 1
                 1 -1 -1 1
            </float4>
            <float4 name="colorcoords">
                1 1 1 1
                0 1 1 1
                1 0 1 1
                1 0 0 1
                0 0 1 1
                1 1 0 1
                0 1 0 1
                0 0 0 1
            </float4>
            <float4 name="texcoords">
                0 0 0 0
                0 1 0 0
                1 0 0 0
                1 1 0 0
                1 1 0 0
                0 1 0 0
                1 0 0 0
                0 1 0 0
            </float4>
        </data>
    </defs>
</root>
